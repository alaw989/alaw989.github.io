/* SPACING UNITS
========================================================================== */
/*
* Try and use only these values to set typography spacing (margins) across site for consistency.
*
* $spacingBase is the same as default line height above. This value is then increased/decreased by halves.
*
* These values can be used in classes for tweaking spacing and are used in _base/helper-classes.scss
* styles for one-off use cases where an entire new class is not necessary
*/
/*
 * Headings sizes (in pixels).
 */
/*
 * Ancillary sizes (in pixels).
 */
/* ============================================================================================== */
/* ============================================================================================== */
/*
 * Monochrome colors
 */
/*
 * Text elements
 */
/*
 * Generic border color for consistency
 */
/* FONT-SIZE
========================================================================== */
/*
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 *
   `@include font-size(10px);`
 *
 * Thanks to @redclov3r for the `line-height` Sass:
 * twitter.com/redclov3r/status/250301539321798657
 *
 * Basically what this does is add font size (in rems) and if no line-height is declared
 * in the style you are creating, this mixin will create one that matches the
 * line-height applied to the body.
 */
/* SPACING UNITS
========================================================================== */
/*
* Try and use only these values to set typography spacing (margins) across site for consistency.
*
* $spacingBase is the same as default line height above. This value is then increased/decreased by halves.
*
* These values can be used in classes for tweaking spacing and are used in _base/helper-classes.scss
* styles for one-off use cases where an entire new class is not necessary
*/
/*
 * Headings sizes (in pixels).
 */
/*
 * Ancillary sizes (in pixels).
 */
/* ============================================================================================== */
/* ============================================================================================== */
/*
 * Monochrome colors
 */
/*
 * Text elements
 */
/*
 * Generic border color for consistency
 */
/* FONT-SIZE
========================================================================== */
/*
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 *
   `@include font-size(10px);`
 *
 * Thanks to @redclov3r for the `line-height` Sass:
 * twitter.com/redclov3r/status/250301539321798657
 *
 * Basically what this does is add font size (in rems) and if no line-height is declared
 * in the style you are creating, this mixin will create one that matches the
 * line-height applied to the body.
 */
@import url("https://fonts.googleapis.com/css?family=Roboto+Condensed");
#header {
  background: transparent;
  position: fixed;
  width: 100%;
  z-index: 99;
  -webkit-transition: all .5s;
  transition: all .5s; }
  #header .container .headerMain {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    padding: 0 12px;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; }
    #header .container .headerMain #logo {
      padding: 0 6px; }
    #header .container .headerMain #mainNav .level1 {
      display: -webkit-inline-box;
      display: -ms-inline-flexbox;
      display: inline-flex; }
      #header .container .headerMain #mainNav .level1 li {
        padding: 35px 20px;
        -webkit-transition: all .5s;
        transition: all .5s;
        list-style-type: none;
        cursor: pointer; }
        #header .container .headerMain #mainNav .level1 li:hover {
          color: orange !important; }
    #header .container .headerMain .hamburger {
      display: none; }

.sidenav {
  height: 100%;
  /* 100% Full-height */
  width: 0;
  /* 0 width - change this with JavaScript */
  position: fixed;
  /* Stay in place */
  z-index: 1;
  /* Stay on top */
  top: 0;
  left: 0;
  background-color: #111;
  /* Black*/
  overflow-x: hidden;
  /* Disable horizontal scroll */
  padding-top: 60px;
  /* Place content 60px from the top */
  -webkit-transition: 0.5s;
  transition: 0.5s;
  /* 0.5 second transition effect to slide in the sidenav */ }
  .sidenav .li-hook {
    padding: 8px 8px 8px 32px !important;
    list-style-type: none;
    font-size: 25px;
    color: #818181;
    display: block;
    font-family: 'Raleway', sans-serif;
    cursor: pointer;
    -webkit-transition: 0.3s .sidenav .li-hook;
    transition: 0.3s .sidenav .li-hook; }
    .sidenav .li-hook :hover {
      color: #f1f1f1; }
  .sidenav a {
    padding: 8px 8px 8px 32px;
    text-decoration: none;
    font-size: 25px;
    color: #818181;
    display: block;
    font-family: 'Raleway', sans-serif;
    -webkit-transition: 0.3s .sidenav a;
    transition: 0.3s .sidenav a; }
    .sidenav a :hover {
      color: #f1f1f1; }

@media (min-width: 1px) and (max-width: 1250px) {
  #header .container .headerMain #logo h3 {
    font-size: 1.6rem; }
  #header .container .headerMain #mainNav .level1 {
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex; }
    #header .container .headerMain #mainNav .level1 li {
      padding: 35px 10px;
      color: white;
      -webkit-transition: all 1s;
      transition: all 1s;
      list-style-type: none;
      font-size: .9rem; }
      #header .container .headerMain #mainNav .level1 li:hover {
        color: orange; }
  #header .container .headerMain .hamburger {
    display: none;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    padding: 48px 12px; }
    #header .container .headerMain .hamburger img {
      min-width: 30px;
      max-width: 30px; }
      #header .container .headerMain .hamburger img:hover {
        cursor: pointer; } }

@media (min-width: 1px) and (max-width: 768px) {
  #header .container .headerMain #mainNav {
    display: none; }
    #header .container .headerMain #mainNav .level1 {
      display: -webkit-inline-box;
      display: -ms-inline-flexbox;
      display: inline-flex; }
      #header .container .headerMain #mainNav .level1 li {
        padding: 35px 15px;
        color: white;
        -webkit-transition: all 1s;
        transition: all 1s;
        list-style-type: none; }
        #header .container .headerMain #mainNav .level1 li:hover {
          color: orange; }
  #header .container .headerMain .hamburger {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    padding: 24px 12px; }
    #header .container .headerMain .hamburger img {
      min-width: 30px;
      max-width: 30px; }
      #header .container .headerMain .hamburger img:hover {
        cursor: pointer; } }

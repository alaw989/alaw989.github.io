/* SPACING UNITS
========================================================================== */
/*
* Try and use only these values to set typography spacing (margins) across site for consistency.
*
* $spacingBase is the same as default line height above. This value is then increased/decreased by halves.
*
* These values can be used in classes for tweaking spacing and are used in _base/helper-classes.scss
* styles for one-off use cases where an entire new class is not necessary
*/
/*
 * Headings sizes (in pixels).
 */
/*
 * Ancillary sizes (in pixels).
 */
/* ============================================================================================== */
/* ============================================================================================== */
/*
 * Monochrome colors
 */
/*
 * Text elements
 */
/*
 * Generic border color for consistency
 */
/* FONT-SIZE
========================================================================== */
/*
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 *
   `@include font-size(10px);`
 *
 * Thanks to @redclov3r for the `line-height` Sass:
 * twitter.com/redclov3r/status/250301539321798657
 *
 * Basically what this does is add font size (in rems) and if no line-height is declared
 * in the style you are creating, this mixin will create one that matches the
 * line-height applied to the body.
 */
/* SPACING UNITS
========================================================================== */
/*
* Try and use only these values to set typography spacing (margins) across site for consistency.
*
* $spacingBase is the same as default line height above. This value is then increased/decreased by halves.
*
* These values can be used in classes for tweaking spacing and are used in _base/helper-classes.scss
* styles for one-off use cases where an entire new class is not necessary
*/
/*
 * Headings sizes (in pixels).
 */
/*
 * Ancillary sizes (in pixels).
 */
/* ============================================================================================== */
/* ============================================================================================== */
/*
 * Monochrome colors
 */
/*
 * Text elements
 */
/*
 * Generic border color for consistency
 */
/* FONT-SIZE
========================================================================== */
/*
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 *
   `@include font-size(10px);`
 *
 * Thanks to @redclov3r for the `line-height` Sass:
 * twitter.com/redclov3r/status/250301539321798657
 *
 * Basically what this does is add font size (in rems) and if no line-height is declared
 * in the style you are creating, this mixin will create one that matches the
 * line-height applied to the body.
 */
.containerbg .featureBlock-Heading {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; }
  .containerbg .featureBlock-Heading h3 {
    color: white;
    /*background: rgba($colorBrandPrimaryDark, .8); */
    padding: 6px;
    font-size: 35px;
    font-size: 2.1875rem;
    line-height: 1.37143;
    font-family: 'Roboto Condensed', sans-serif;
    letter-spacing: 2px; }

.containerbg .textblock {
  padding: 0 0 24px 0;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center; }
  .containerbg .textblock p {
    color: #334d66;
    max-width: 70%;
    padding: 6px 6px 6px 12px;
    text-align: left;
    /*background: rgba($colorBrandPrimaryDark, .8); */
    color: #fff;
    max-height: 100%;
    margin: 48px;
    font-size: 19px;
    font-size: 1.1875rem;
    line-height: 1.26316;
    line-height: 32px;
    font-family: 'Roboto Condensed', sans-serif; }
  .containerbg .textblock img {
    -webkit-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    border-radius: 5px; }

@media (min-width: 1px) and (max-width: 1250px) {
  .containerbg .featureBlock-Heading {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center; }
    .containerbg .featureBlock-Heading h3 {
      color: white;
      background: rgba(77, 115, 153, 0.8);
      padding: 6px;
      -ms-flex-item-align: center;
          align-self: center;
      margin: 0; }
  .containerbg .textblock {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center; }
    .containerbg .textblock p {
      font-size: 16px;
      text-align: center;
      -webkit-box-ordinal-group: 3;
          -ms-flex-order: 2;
              order: 2;
      line-height: 24px; }
    .containerbg .textblock img {
      -webkit-box-ordinal-group: 2;
          -ms-flex-order: 1;
              order: 1; } }

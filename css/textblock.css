/* SPACING UNITS
========================================================================== */
/*
* Try and use only these values to set typography spacing (margins) across site for consistency.
*
* $spacingBase is the same as default line height above. This value is then increased/decreased by halves.
*
* These values can be used in classes for tweaking spacing and are used in _base/helper-classes.scss
* styles for one-off use cases where an entire new class is not necessary
*/
/*
 * Headings sizes (in pixels).
 */
/*
 * Ancillary sizes (in pixels).
 */
/* ============================================================================================== */
/* ============================================================================================== */
/*
 * Monochrome colors
 */
/*
 * Text elements
 */
/*
 * Generic border color for consistency
 */
/* FONT-SIZE
========================================================================== */
/*
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 *
   `@include font-size(10px);`
 *
 * Thanks to @redclov3r for the `line-height` Sass:
 * twitter.com/redclov3r/status/250301539321798657
 *
 * Basically what this does is add font size (in rems) and if no line-height is declared
 * in the style you are creating, this mixin will create one that matches the
 * line-height applied to the body.
 */
/* SPACING UNITS
========================================================================== */
/*
* Try and use only these values to set typography spacing (margins) across site for consistency.
*
* $spacingBase is the same as default line height above. This value is then increased/decreased by halves.
*
* These values can be used in classes for tweaking spacing and are used in _base/helper-classes.scss
* styles for one-off use cases where an entire new class is not necessary
*/
/*
 * Headings sizes (in pixels).
 */
/*
 * Ancillary sizes (in pixels).
 */
/* ============================================================================================== */
/* ============================================================================================== */
/*
 * Monochrome colors
 */
/*
 * Text elements
 */
/*
 * Generic border color for consistency
 */
/* FONT-SIZE
========================================================================== */
/*
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 *
   `@include font-size(10px);`
 *
 * Thanks to @redclov3r for the `line-height` Sass:
 * twitter.com/redclov3r/status/250301539321798657
 *
 * Basically what this does is add font size (in rems) and if no line-height is declared
 * in the style you are creating, this mixin will create one that matches the
 * line-height applied to the body.
 */
.containerbg {
  /* background: linear-gradient(0deg,rgba(0,0,0,0.8),rgba(0,0,0,0.8)), url('/images/sunset.jpg') center fixed;*/
  background: white;
  background-repeat: no-repeat;
  width: 100%;
  padding: 48px 0; }
  .containerbg .container .textblock-wrapper {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-direction: row;
            flex-direction: row;
    -ms-flex-pack: distribute;
        justify-content: space-around; }
    .containerbg .container .textblock-wrapper .textblock-column {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
          -ms-flex-direction: column;
              flex-direction: column;
      width: 100%;
      padding: 0 0 0 24px; }
      .containerbg .container .textblock-wrapper .textblock-column hr {
        margin: 10px 0 0 0; }
      .containerbg .container .textblock-wrapper .textblock-column img {
        padding: 12px;
        -webkit-box-shadow: 0 0 40px #6699cc;
                box-shadow: 0 0 40px #6699cc;
        margin: 0 24px 0 0; }

@media (min-width: 1px) and (max-width: 1250px) {
  .containerbg {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center; }
    .containerbg h2 {
      padding: 6px;
      -ms-flex-item-align: center;
          align-self: center;
      margin: 0; }
    .containerbg .textblock {
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
          -ms-flex-direction: column;
              flex-direction: column;
      -webkit-box-pack: center;
          -ms-flex-pack: center;
              justify-content: center; }
      .containerbg .textblock p {
        font-size: 16px;
        text-align: justify;
        -webkit-box-ordinal-group: 3;
            -ms-flex-order: 2;
                order: 2;
        line-height: 24px; }
      .containerbg .textblock img {
        -webkit-box-ordinal-group: 2;
            -ms-flex-order: 1;
                order: 1; } }

@media (min-width: 1px) and (max-width: 768px) {
  .containerbg {
    width: 100%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center; }
    .containerbg h2 {
      padding: 6px;
      -ms-flex-item-align: center;
          align-self: center;
      margin: 0; }
    .containerbg .textblock {
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
          -ms-flex-direction: column;
              flex-direction: column;
      -webkit-box-pack: center;
          -ms-flex-pack: center;
              justify-content: center; }
      .containerbg .textblock p {
        text-align: justify;
        -webkit-box-ordinal-group: 3;
            -ms-flex-order: 2;
                order: 2;
        line-height: 24px; }
      .containerbg .textblock img {
        -webkit-box-ordinal-group: 2;
            -ms-flex-order: 1;
                order: 1; } }

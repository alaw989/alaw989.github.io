/* SPACING UNITS
========================================================================== */
/*
* Try and use only these values to set typography spacing (margins) across site for consistency.
*
* $spacingBase is the same as default line height above. This value is then increased/decreased by halves.
*
* These values can be used in classes for tweaking spacing and are used in _base/helper-classes.scss
* styles for one-off use cases where an entire new class is not necessary
*/
/*
 * Headings sizes (in pixels).
 */
/*
 * Ancillary sizes (in pixels).
 */
/* ============================================================================================== */
/* ============================================================================================== */
/*
 * Monochrome colors
 */
/*
 * Text elements
 */
/*
 * Generic border color for consistency
 */
/* FONT-SIZE
========================================================================== */
/*
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 *
   `@include font-size(10px);`
 *
 * Thanks to @redclov3r for the `line-height` Sass:
 * twitter.com/redclov3r/status/250301539321798657
 *
 * Basically what this does is add font size (in rems) and if no line-height is declared
 * in the style you are creating, this mixin will create one that matches the
 * line-height applied to the body.
 */
/* SPACING UNITS
========================================================================== */
/*
* Try and use only these values to set typography spacing (margins) across site for consistency.
*
* $spacingBase is the same as default line height above. This value is then increased/decreased by halves.
*
* These values can be used in classes for tweaking spacing and are used in _base/helper-classes.scss
* styles for one-off use cases where an entire new class is not necessary
*/
/*
 * Headings sizes (in pixels).
 */
/*
 * Ancillary sizes (in pixels).
 */
/* ============================================================================================== */
/* ============================================================================================== */
/*
 * Monochrome colors
 */
/*
 * Text elements
 */
/*
 * Generic border color for consistency
 */
/* FONT-SIZE
========================================================================== */
/*
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 *
   `@include font-size(10px);`
 *
 * Thanks to @redclov3r for the `line-height` Sass:
 * twitter.com/redclov3r/status/250301539321798657
 *
 * Basically what this does is add font size (in rems) and if no line-height is declared
 * in the style you are creating, this mixin will create one that matches the
 * line-height applied to the body.
 */
/*
@import url('https://fonts.googleapis.com/css?family=Ropa+Sans');
@import url('https://fonts.googleapis.com/css?family=Roboto+Condensed');


.featureBlock-Heading {
   padding: $spacingLg 0 $spacingBase 0;
   text-align: center;
   color: $colorBrandPrimaryDarker;
   @include font-size(35px);
   font-family: 'Roboto Condensed', sans-serif;
   letter-spacing: 2px;
}

.featureBlock-container {
  padding: $spacingSm 0;
}


   .featureBlock {
       display: flex;
       justify-content: center;
       padding: 0 0 $spacingLg 0;
       flex-direction: row;
       flex: auto auto auto;
       align-content: stretch;
       width: 100%;

   figure {
      max-width: 370px;
      margin: 0 $spacingSm;
      position: relative;
      overflow: hidden;
          flex-basis: auto;
          flex-shrink: 1;
          max-height: 250px;
      
      figcaption {
        height: 20%;
        -webkit-transition: all .5s  ease-out;
        transition: all .5s  ease-out;
      }
      .hiddenText {
        -webkit-transition: all 1s ease-out;
        transition: all 1s ease-out;
        ul {
          list-style-image: url(/images/check.png);
          li {
            font-family: 'Roboto Condensed', sans-serif;
          }
        }
      }
      &:hover {
        figcaption {
          height: 100%;
        }
        .hiddenText {
          display: block;
        }
      }
      figcaption {
         padding: $spacingSm 0 $spacingSm 0;
         background-color: rgba(47, 102, 151, .8);
         position: absolute;
         bottom: 0;
         right: 0;
         width: 100%;
         max-width: 370px;

         h3 {
            margin-top: 0;
            @include font-size(24px);
            color: $colorWhite;;
            margin-bottom: 0;
            text-align: left;
            padding-left: $spacingSm;
            font-family: 'Roboto Condensed', sans-serif;
            letter-spacing: 1.5px;
         }
         p {
          color: white;
          font-family: 'Roboto Condensed', sans-serif;
          text-align: left;
         }
      }
   }

   a {
      text-decoration: none;
   }
}

 @include tablet {
    .featureBlock-Heading {
       text-align: center;
    }
    .featureBlock {
       -webkit-box-orient: vertical;
       -webkit-box-direction: normal;
           -ms-flex-direction: column;
               flex-direction: column;
       max-width: 43%;
       -webkit-box-pack: justify;
           -ms-flex-pack: justify;
               justify-content: space-between;
       margin: 0 auto;
       min-width: 300px;
       figure {
          margin-bottom: $spacingSm;
       }
    }
 }
 */

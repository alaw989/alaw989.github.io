/* SPACING UNITS
========================================================================== */
/*
* Try and use only these values to set typography spacing (margins) across site for consistency.
*
* $spacingBase is the same as default line height above. This value is then increased/decreased by halves.
*
* These values can be used in classes for tweaking spacing and are used in _base/helper-classes.scss
* styles for one-off use cases where an entire new class is not necessary
*/
/*
 * Headings sizes (in pixels).
 */
/*
 * Ancillary sizes (in pixels).
 */
/* ============================================================================================== */
/* ============================================================================================== */
/*
 * Monochrome colors
 */
/*
 * Text elements
 */
/*
 * Generic border color for consistency
 */
/* FONT-SIZE
========================================================================== */
/*
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 *
   `@include font-size(10px);`
 *
 * Thanks to @redclov3r for the `line-height` Sass:
 * twitter.com/redclov3r/status/250301539321798657
 *
 * Basically what this does is add font size (in rems) and if no line-height is declared
 * in the style you are creating, this mixin will create one that matches the
 * line-height applied to the body.
 */
/* SPACING UNITS
========================================================================== */
/*
* Try and use only these values to set typography spacing (margins) across site for consistency.
*
* $spacingBase is the same as default line height above. This value is then increased/decreased by halves.
*
* These values can be used in classes for tweaking spacing and are used in _base/helper-classes.scss
* styles for one-off use cases where an entire new class is not necessary
*/
/*
 * Headings sizes (in pixels).
 */
/*
 * Ancillary sizes (in pixels).
 */
/* ============================================================================================== */
/* ============================================================================================== */
/*
 * Monochrome colors
 */
/*
 * Text elements
 */
/*
 * Generic border color for consistency
 */
/* FONT-SIZE
========================================================================== */
/*
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 *
   `@include font-size(10px);`
 *
 * Thanks to @redclov3r for the `line-height` Sass:
 * twitter.com/redclov3r/status/250301539321798657
 *
 * Basically what this does is add font size (in rems) and if no line-height is declared
 * in the style you are creating, this mixin will create one that matches the
 * line-height applied to the body.
 */
/*.float-right {
    float: right;
    margin: $spacingSm $spacingSm;
    background: linear-gradient(rgba(0, 0, 0, 0.45), rgba(0, 0, 0, 0.5)), url('/images/3guys.jpg') no-repeat !important;
                    &:hover {
                    background: linear-gradient(rgba(0, 0, 0, 0.45), rgba(0, 0, 0, 0.7)), url('/images/3guys.jpg') no-repeat !important;
                }
}

.float-left {
    float: left;
    margin-right: $spacingSm;
}


.services-wrapper {
    background-color: #eeeeee;
    overflow: hidden;
    padding-bottom: 80px;
    .container {

        .special1 {
            overflow: hidden;
            padding: 0 $spacingLg;
            p {
                margin: 0;
            }
            .specialImage {
                background: linear-gradient(rgba(0, 0, 0, 0.45), rgba(0, 0, 0, 0.5)), url('/images/2guys.jpg') no-repeat;
                transition: transform .4s ease-out;
                transform: scale(1, 1);
                padding: 100px 100px 20px 100px;
                padding: 0 $spacingLg;
                &:hover {
                    background: linear-gradient(rgba(0, 0, 0, 0.45), rgba(0, 0, 0, 0.7)), url('/images/2guys.jpg') no-repeat;
                }

                #first {
                    visibility: visible;
                    opacity: 1;
                    transition: opacity .25s ease-in-out;
                    align-self: left;
                    text-align: center;
                    position: relative;
                    top: 170px;
                    @include font-size(30px);
                    margin: 0;
                    color: white;

                    &:after {

                        content: url('/images/plus.svg');
                        position: relative;
                        bottom: 110px;
                        width: 20%;
                        display: block;
                        margin: 0 auto;
                    }
                }
                #second {
                    visibility: visible;
                    opacity: 1;
                    transition: opacity .25s ease-in-out;
                    align-self: left;
                    text-align: center;
                    position: relative;
                    top: 115px;
                    @include font-size(30px);
                    margin: 0;
                    color: white;
                    &:after {
                        content: url('/images/plus.svg');
                        position: relative;
                        bottom: 90px;
                        width: 20%;
                        display: block;
                        margin: 0 auto;
                    }
                }
                ul {
                    visibility: visible;
                    opacity: 0;
                    transition: opacity .25s ease-in-out;
                    text-align: left;
                    position: relative;
                    margin: 0 auto;
                    bottom: 50px;
                    margin-left: $spacingSm;
                    list-style-image: url(/images/check.png);
                    padding-left: 40px;
                    color: white;
                    li {
                        color: white;
                    }
                }
                @include desktop {
                    &:hover {
                        overflow: hidden;
                        #first,
                        #second {
                            visibility: hidden;
                            opacity: 0;
                        }
                        ul {
                            opacity: 1;
                        }
                    }
                }
            }

            .image2 {
                float: right;
            }
        }
    }
}
*/
.services-wrapper {
  background: #f1f1f1;
  padding: 50px 0; }
  .services-wrapper .container .column-wrapper {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-direction: row;
            flex-direction: row;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between; }
    .services-wrapper .container .column-wrapper .services-column {
      width: 100%;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
          -ms-flex-direction: column;
              flex-direction: column;
      margin: 0 auto;
      text-align: center;
      padding: 0 24px; }
      .services-wrapper .container .column-wrapper .services-column i {
        font-size: 5rem;
        color: #f48c58; }
      .services-wrapper .container .column-wrapper .services-column h5 {
        text-align: right;
        padding: 12px 0;
        background: #6699cc;
        color: white;
        padding-right: 12px;
        margin-bottom: 12px; }
      .services-wrapper .container .column-wrapper .services-column #capa {
        margin-top: 48px; }
      .services-wrapper .container .column-wrapper .services-column ul {
        margin: 0 24px; }
      .services-wrapper .container .column-wrapper .services-column li {
        text-align: right;
        list-style-type: circle;
        line-height: 1.7rem;
        direction: rtl; }
      .services-wrapper .container .column-wrapper .services-column p {
        text-align: left;
        margin-top: 0; }
